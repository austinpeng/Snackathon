--
-- Script was generated by Devart dbForge Studio for MySQL, Version 7.2.53.0
-- Product home page: http://www.devart.com/dbforge/mysql/studio
-- Script date 12/3/2016 7:58:51 PM
-- Server version: 5.7.14
-- Client version: 4.1
--


-- 
-- Disable foreign keys
-- 
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;

-- 
-- Set SQL mode
-- 
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;

-- 
-- Set default database
--
USE snackathon_1;

--
-- Definition for table item_modifiers
--
DROP TABLE IF EXISTS item_modifiers;
CREATE TABLE item_modifiers (
  mod_id INT(11) NOT NULL AUTO_INCREMENT,
  item_id INT(11) DEFAULT NULL,
  mod_name VARCHAR(255) DEFAULT NULL,
  mod_desc VARCHAR(255) DEFAULT NULL,
  mod_type TINYINT(1) DEFAULT NULL,
  mod_options TEXT DEFAULT NULL,
  PRIMARY KEY (mod_id),
  INDEX FK_item_modifiers_item_id (item_id)
)
ENGINE = MYISAM
AUTO_INCREMENT = 1
CHARACTER SET latin1
COLLATE latin1_swedish_ci
COMMENT = 'in_json';

--
-- Definition for table menu_items
--
DROP TABLE IF EXISTS menu_items;
CREATE TABLE menu_items (
  menu_item_id INT(11) NOT NULL AUTO_INCREMENT,
  restaurant_id INT(11) DEFAULT NULL,
  item_name VARCHAR(255) DEFAULT NULL,
  item_price DOUBLE DEFAULT NULL,
  item_description TEXT DEFAULT NULL,
  PRIMARY KEY (menu_item_id),
  INDEX FK_menu_items_restaurant_id (restaurant_id)
)
ENGINE = MYISAM
AUTO_INCREMENT = 1
CHARACTER SET latin1
COLLATE latin1_swedish_ci;

--
-- Definition for table orders
--
DROP TABLE IF EXISTS orders;
CREATE TABLE orders (
  order_id INT(11) NOT NULL AUTO_INCREMENT,
  restaurant_id INT(11) DEFAULT NULL,
  order_items TEXT DEFAULT NULL,
  order_address VARCHAR(255) DEFAULT NULL,
  order_paid TINYINT(1) DEFAULT NULL,
  order_delivery_method VARCHAR(255) DEFAULT NULL,
  order_status VARCHAR(255) DEFAULT NULL,
  PRIMARY KEY (order_id)
)
ENGINE = MYISAM
AUTO_INCREMENT = 1
CHARACTER SET latin1
COLLATE latin1_swedish_ci
COMMENT = 'JSON';

--
-- Definition for table restaurants_list
--
DROP TABLE IF EXISTS restaurants_list;
CREATE TABLE restaurants_list (
  r_id INT(11) NOT NULL AUTO_INCREMENT,
  r_name VARCHAR(255) DEFAULT NULL,
  r_pricerange_low TINYINT(4) DEFAULT NULL,
  r_pricerange_high TINYINT(4) DEFAULT NULL,
  r_opentime TIME DEFAULT NULL,
  r_closetime TIME DEFAULT NULL,
  allowed_users VARCHAR(255) DEFAULT NULL,
  r_address TEXT DEFAULT NULL,
  PRIMARY KEY (r_id)
)
ENGINE = MYISAM
AUTO_INCREMENT = 1
CHARACTER SET latin1
COLLATE latin1_swedish_ci
COMMENT = 'JSON';

--
-- Definition for table users
--
DROP TABLE IF EXISTS users;
CREATE TABLE users (
  userid INT(11) NOT NULL AUTO_INCREMENT,
  username VARCHAR(255) DEFAULT NULL,
  real_name VARCHAR(255) DEFAULT NULL,
  email_address VARCHAR(255) DEFAULT NULL,
  phone_number VARCHAR(255) DEFAULT NULL,
  password_salt VARCHAR(255) DEFAULT NULL,
  password_hash VARCHAR(255) DEFAULT NULL,
  restaurant_allowed INT(11) DEFAULT NULL,
  current_auth_code VARCHAR(255) DEFAULT NULL,
  PRIMARY KEY (userid)
)
ENGINE = MYISAM
AUTO_INCREMENT = 2
AVG_ROW_LENGTH = 116
CHARACTER SET latin1
COLLATE latin1_swedish_ci;

DELIMITER $$

--
-- Definition for procedure get_item_mods
--
DROP PROCEDURE IF EXISTS get_item_mods$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE get_item_mods(IN item_id VARCHAR(255))
BEGIN
  SELECT * FROM item_modifiers im WHERE im.item_id = item_id;
END
$$

--
-- Definition for procedure get_restaurants
--
DROP PROCEDURE IF EXISTS get_restaurants$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE get_restaurants()
BEGIN
  SELECT * FROM restaurants_list rl;
END
$$

--
-- Definition for procedure get_restaurant_menu_items
--
DROP PROCEDURE IF EXISTS get_restaurant_menu_items$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE get_restaurant_menu_items(IN restauarant_id varchar(255))
BEGIN
  SELECT
    mi.menu_item_id,
    mi.restaurant_id,
    mi.item_name,
    mi.item_price,
    mi.item_description
  FROM menu_items mi
  WHERE mi.restaurant_id = restauarant_id;
END
$$

--
-- Definition for procedure get_user
--
DROP PROCEDURE IF EXISTS get_user$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE get_user(IN user_name VARCHAR(255))
BEGIN
  SELECT * FROM users WHERE username = user_name;
END
$$

--
-- Definition for procedure register
--
DROP PROCEDURE IF EXISTS register$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE register(IN username VARCHAR(255), IN realname VARCHAR(255), IN email_address VARCHAR(255), IN phone_number VARCHAR(255), IN pass_salt VARCHAR(255), IN pass_hash VARCHAR(255))
BEGIN
    INSERT INTO users(username, real_name, email_address, phone_number, password_salt, password_hash, restaurant_allowed) VALUES(username, realname, email_address, phone_number, pass_salt, pass_hash, -1);
END
$$

DELIMITER ;

-- 
-- Dumping data for table item_modifiers
--

-- Table snackathon_1.item_modifiers does not contain any data (it is empty)

-- 
-- Dumping data for table menu_items
--

-- Table snackathon_1.menu_items does not contain any data (it is empty)

-- 
-- Dumping data for table orders
--

-- Table snackathon_1.orders does not contain any data (it is empty)

-- 
-- Dumping data for table restaurants_list
--

-- Table snackathon_1.restaurants_list does not contain any data (it is empty)

-- 
-- Dumping data for table users
--
INSERT INTO users VALUES
(1, 'austin.peng', 'Austin Penguin', 'austin.peng@snackathon.io', '908-267-8931', 'djs', 'c83387cb81a92f180530bfdf20f5bb28', 0, NULL);

-- 
-- Restore previous SQL mode
-- 
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;

-- 
-- Enable foreign keys
-- 
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;